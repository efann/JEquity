/*
 * JEquity
 * Copyright(c) 2008-2020, Beowurks
 * Original Author: Eddie Fann
 * License: Eclipse Public License - v 2.0 (https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html)
 *
 */
// Generated by IntelliJ
// View | Tool Windows | Persistence
// Make sure that you have a hibernate.cfg.xml file in project
//
// BY THE WAY, GroupEntity has default values for the private fields, save for the ID.
// This way, there will be no NULL values which throw errors when saving.
// This technique is not needed for the Warehouse tables as they are not updated with POJOs.
package com.beowurks.jequity.dao.hibernate;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import java.io.Serializable;
import java.util.Objects;

// The schema is set in the configuration file. This way, the schema can be specific
// to the database. For example, MySQL doesn't have a schema in the traditional sense:
// The schema is the database.
// Case-sensitive issue solution: https://forum.hibernate.org/viewtopic.php?f=1&t=972808
@Entity
@Table(name = "`Group`", catalog = "")
public class GroupEntity implements Serializable
{

  private static final long serialVersionUID = 1L;

  private Integer groupid;
  private String description = "";

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "GROUPID", unique = true, nullable = false, insertable = false, updatable = false)
  public Integer getGroupID()
  {
    return (this.groupid);
  }

  public void setGroupID(final Integer tnGroupID)
  {
    this.groupid = tnGroupID;
  }

  @Basic
  @Column(name = "DESCRIPTION", nullable = false, insertable = true, updatable = true, length = 128)
  public String getDescription()
  {
    return (this.description);
  }

  public void setDescription(final String tcDescription)
  {
    this.description = tcDescription.trim();
  }

  @Override
  public boolean equals(final Object toObject)
  {
    if (this == toObject)
    {
      return (true);
    }
    if (toObject == null || this.getClass() != toObject.getClass())
    {
      return (false);
    }

    final GroupEntity that = (GroupEntity) toObject;

    if (!Objects.equals(this.description, that.description))
    {
      return (false);
    }
    return (Objects.equals(this.groupid, that.groupid));
  }

  @Override
  public int hashCode()
  {
    int lnResult = this.groupid != null ? this.groupid.hashCode() : 0;
    lnResult = 31 * lnResult + (this.description != null ? this.description.hashCode() : 0);

    return (lnResult);
  }
}
